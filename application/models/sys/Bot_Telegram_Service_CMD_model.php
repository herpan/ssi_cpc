<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Bot_Telegram_Service_CMD_model extends CI_Model {
   public $id;	
   function __construct(){
        parent::__construct();
   }	
	
	public function json(){
		$this->datatables->select('
			sys_bot_telegram_service_cmd.id as id,
			sys_bot_telegram_service_cmd.name as name,
			sys_bot_telegram_service_cmd.descriptions as descriptions,
			sys_bot_telegram_service_cmd.message as message,
			sys_bot_telegram_service_cmd.id_service as id_service,
			tservice.id as tservice_id,
			
			tservice.name as tservice_name,
			tservice.key as key,
		');
		
		$this->datatables->from('sys_bot_telegram_service_cmd');
		$this->datatables->join('sys_bot_telegram_service tservice','tservice.id=sys_bot_telegram_service_cmd.id_service','LEFT'); 

		
		
		//mengembalikan dalam bentuk array
		$q =  json_decode($this->datatables->generate(),true);
		return $q;
	}
	

   public function get_all(){
		$afield = array(
			'sys_bot_telegram_service_cmd.id as id',
			'sys_bot_telegram_service_cmd.name as name',
			'sys_bot_telegram_service_cmd.descriptions as descriptions',
			'sys_bot_telegram_service_cmd.message as message',
			'sys_bot_telegram_service_cmd.id_service as id_service',
			'tservice.id as tservice_id',
		
			'tservice.name as tservice_name',
			'tservice.key as key',
		
		);
		$this->db->select($afield);
		$this->db->join('sys_bot_telegram_service tservice','tservice.id=sys_bot_telegram_service_cmd.id_service','LEFT'); 

		$this->db->order_by('sys_bot_telegram_service_cmd.id', 'ASC');
		return $this->db->get('sys_bot_telegram_service_cmd')->result_array();
   }


	public function get_by_id($id){
		$afield = array(
			'sys_bot_telegram_service_cmd.id as id',
			'sys_bot_telegram_service_cmd.name as name',
			'sys_bot_telegram_service_cmd.descriptions as descriptions',
			'sys_bot_telegram_service_cmd.message as message',
			'sys_bot_telegram_service_cmd.id_service as id_service',
			'tservice.id as tservice_id',
			'tservice.name as tservice_name',
			'tservice.key as key',
		
		);
		$this->db->select($afield);
		$this->db->join('sys_bot_telegram_service tservice','tservice.id=sys_bot_telegram_service_cmd.id_service','LEFT'); 

		$this->db->where('sys_bot_telegram_service_cmd.id', $id);
		$this->db->order_by('sys_bot_telegram_service_cmd.id', 'ASC');
		return $this->db->get('sys_bot_telegram_service_cmd')->row();
   }
   
   
   public function get_by_service($id_service){
		$this->db->where('sys_bot_telegram_service_cmd.id_service', $id_service);
	   	return $this->db->get('sys_bot_telegram_service_cmd')->result_array();
   }


	/* Memastikan data yg dibuat tidak kembar/sama,
	   fungsi ini sebagai pengganti fungsi primary key dr db,
	   krn primary key sudah di gunakan untuk column id.
	   -create : id di kosongkan.
	   -update : id di isi dengan id data yg di proses.	
	*/	
	function if_exist($id,$data){
		$this->db->where('sys_bot_telegram_service_cmd.id <>',$id);

		$q = $this->db->get_where('sys_bot_telegram_service_cmd', $data)->result_array();
		
		if(count($q)>0){
			return true;
		}else{
			return false;
		}		

	

	}


	function insert($data){
	
	    /* transaction rollback */
		$this->db->trans_start();
		
		$this->db->insert('sys_bot_telegram_service_cmd', $data);		
		/* id primary yg baru saja di input*/
		$this->id = $this->db->insert_id(); 
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false
	}

	function update($id,$data){

		/* transaction rollback */
		$this->db->trans_start();

		$this->db->where('sys_bot_telegram_service_cmd.id', $id);
		$this->db->update('sys_bot_telegram_service_cmd', $data);
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
	}

	function delete_multiple($data){
		/* transaction rollback */
		$this->db->trans_start();
		
		if(!empty($data)){
			$this->db->where_in('sys_bot_telegram_service_cmd.id',$data);	
	
			$this->db->delete('sys_bot_telegram_service_cmd');
		}
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
		
	}


};

/* END */
/* Mohon untuk tidak mengubah informasi ini : */
/* Generated by YBS CRUD Generator 2019-12-18 05:31:34 */
/* contact : YAP BRIDGING SYSTEM 		*/
/*			 bridging.system@gmail.com  */
/* 			 MAKASSAR CITY, INDONESIAN 	*/
