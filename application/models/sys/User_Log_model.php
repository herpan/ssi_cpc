<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class User_Log_model extends CI_Model {
   public $id;	
   function __construct(){
        parent::__construct();
   }	
	
	public function json(){
		$this->datatables->select('
			sys_user_log_login.id as id,
			FROM_UNIXTIME(sys_user_log_login.login_time,"%d %M %Y - %H:%i:%s") as login_time,
			FROM_UNIXTIME(sys_user_log_login.logout_time,"%d %M %Y - %H:%i:%s") as logout_time,
			sys_user_log_login.ip as ip,
			sys_user_log_login.browser as browser,
			sys_user_log_login.os as os,
			tuser.nmuser as nmuser,
			
			tuser.picture as picture,
			
			tlevel.nmlevel as nmlevel,
		
		');
		
		$this->datatables->from('sys_user_log_login');
		$this->datatables->join('sys_user tuser','tuser.id=sys_user_log_login.id_user','LEFT'); 
		$this->datatables->join('sys_level tlevel','tlevel.id=tuser.opt_level','LEFT'); 
		$this->datatables->order_by('sys_user_log_login.id', 'DESC');
		
		
		//mengembalikan dalam bentuk array
		$q =  json_decode($this->datatables->generate(),true);
		return $q;
	}
	
	
	public function get_total_access_url($id_login){
		$this->db->where("sys_user_log_accessuri.id_login",$id_login);
		$this->db->from('sys_user_log_accessuri');
		return $this->db->count_all_results();
		
	}

   public function get_all(){
		$afield = array(
			'sys_user_log_login.id as id',
			
			'FROM_UNIXTIME(sys_user_log_login.login_time,"%H:%i:%s - %d %M %Y") as login_time',
			'FROM_UNIXTIME(sys_user_log_login.logout_time,"%H:%i:%s - %d %M %Y") as logout_time',
			'sys_user_log_login.ip as ip',
			'sys_user_log_login.browser as browser',
			'sys_user_log_login.os as os',
			'tuser.nmuser as nmuser',
			
			
			'tuser.picture as picture',
			
			'tlevel.nmlevel as nmlevel',
			
		
		);
		$this->db->select($afield);
		$this->db->join('sys_user tuser','tuser.id=sys_user_log_login.id_user','LEFT'); 
		$this->db->join('sys_level tlevel','tlevel.id=tuser.opt_level','LEFT'); 

		$this->db->order_by('sys_user_log_login.id', 'ASC');
		return $this->db->get('sys_user_log_login')->result_array();
   }


	public function get_by_id($id){
		$afield = array(
			'sys_user_log_login.id as id',
			
			'FROM_UNIXTIME(sys_user_log_login.login_time,"%H:%i:%s - %d %M %Y") as login_time',
			'FROM_UNIXTIME(sys_user_log_login.logout_time,"%H:%i:%s - %d %M %Y") as logout_time',
			'sys_user_log_login.ip as ip',
			'sys_user_log_login.browser as browser',
			'sys_user_log_login.os as os',
			'tuser.nmuser as nmuser',

			'tuser.picture as picture',
			
			'tlevel.nmlevel as nmlevel',
			
		
		);
		$this->db->select($afield);
		$this->db->join('sys_user tuser','tuser.id=sys_user_log_login.id_user','LEFT'); 
		$this->db->join('sys_level tlevel','tlevel.id=tuser.opt_level','LEFT'); 

		$this->db->where('sys_user_log_login.id', $id);
		$this->db->order_by('sys_user_log_login.id', 'ASC');
		return $this->db->get('sys_user_log_login')->row();
   }


	/* Memastikan data yg dibuat tidak kembar/sama,
	   fungsi ini sebagai pengganti fungsi primary key dr db,
	   krn primary key sudah di gunakan untuk column id.
	   -create : id di kosongkan.
	   -update : id di isi dengan id data yg di proses.	
	*/	
	function if_exist($id,$data){
		$this->db->where('sys_user_log_login.id <>',$id);

		$q = $this->db->get_where('sys_user_log_login', $data)->result_array();
		
		if(count($q)>0){
			return true;
		}else{
			return false;
		}		

	

	}

	    // get total rows
    function total_rows($q = NULL) {
		$this->db->from('sys_user_log_login');
        return $this->db->count_all_results();
    }
	

	function insert($data){
	
	    /* transaction rollback */
		$this->db->trans_start();
		
		$this->db->insert('sys_user_log_login', $data);		
		/* id primary yg baru saja di input*/
		$this->id = $this->db->insert_id(); 
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false
	}

	function update($id,$data){

		/* transaction rollback */
		$this->db->trans_start();

		$this->db->where('sys_user_log_login.id', $id);
		$this->db->update('sys_user_log_login', $data);
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
	}

	function delete_multiple($data){
		/* transaction rollback */
		$this->db->trans_start();
		
		if(!empty($data)){
			$this->db->where('sys_user_log_login.logout_time <>',null);	
			$this->db->where_in('sys_user_log_login.id',$data);	
			$this->db->delete('sys_user_log_login');
			
			$this->db->where_in('sys_user_log_accessuri.id_login',$data);	
			$this->db->delete('sys_user_log_accessuri');
		}
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
		
	}


};

/* END */
/* Mohon untuk tidak mengubah informasi ini : */
/* Generated by YBS CRUD Generator 2019-11-06 22:33:11 */
/* contact : YAP BRIDGING SYSTEM 		*/
/*			 bridging.system@gmail.com  */
/* 			 MAKASSAR CITY, INDONESIAN 	*/
